// Mocks generated by Mockito 5.4.6 from annotations
// in door_stamp/test/movie_detail/movie_detail_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:door_stamp/presentation/screens/movie_detail/data/models/movie_detail_model.dart'
    as _i5;
import 'package:door_stamp/presentation/screens/movie_detail/data/repository/movie_detail_repository.dart'
    as _i2;
import 'package:door_stamp/util/result.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MovieDetailRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailRepository extends _i1.Mock
    implements _i2.MovieDetailRepository {
  @override
  _i3.Future<_i4.Result<_i5.MovieDetailModel>> getMovieDetail({
    required String? movieCd,
    bool? forceRefresh = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [], {
              #movieCd: movieCd,
              #forceRefresh: forceRefresh,
            }),
            returnValue: _i3.Future<_i4.Result<_i5.MovieDetailModel>>.value(
              _i6.dummyValue<_i4.Result<_i5.MovieDetailModel>>(
                this,
                Invocation.method(#getMovieDetail, [], {
                  #movieCd: movieCd,
                  #forceRefresh: forceRefresh,
                }),
              ),
            ),
            returnValueForMissingStub:
                _i3.Future<_i4.Result<_i5.MovieDetailModel>>.value(
                  _i6.dummyValue<_i4.Result<_i5.MovieDetailModel>>(
                    this,
                    Invocation.method(#getMovieDetail, [], {
                      #movieCd: movieCd,
                      #forceRefresh: forceRefresh,
                    }),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<_i5.MovieDetailModel>>);
}
